@use "./design-tokens/breakpoints";

.intro {
  &__inner {
    position: relative;
    display: grid;
    grid-template-columns: repeat(4, minmax(16px, 1fr));
    @include breakpoints.md {
      grid-template-columns: repeat(12, minmax(16px, 1fr));
      grid-template-rows: auto;
    }
    &__content {
      margin-top: var(--s-800);
      display: flex;
      gap: var(--s-500);
      flex-direction: column;
      grid-column: 1 / 4;
      // background-color: pink;
      @include breakpoints.md {
        margin-top: -1.65em; // visually move content up "into" nav above
        grid-column: 4 / 8;
      }

      @media screen and (min-width: 1200px) {
        grid-column: 4 / 9;
      }

      @media screen and (min-width: 1400px) {
        flex-direction: row;
      }

      @include breakpoints.lg {
        grid-column: 5 / 9;
      }

      &__image {
        max-width: 140px;
        @include breakpoints.md {
          margin-top: 0.2em; // when container is moved into nav this visually aligns image with top of text
        }
      }
      &__text {
        max-width: 16ch;
        a {
          color: var(--color-text-secondary);
        }
      }
    }
  }
}

#scroll-container {
  // background-color: pink;
  padding: 0;
  line-height: 1.1em;
  min-height: fit-content;
  font-size: calc(var(--s-1300) * 2);
  overflow: hidden;
  margin-top: var(--s-500);

  @include breakpoints.md {
    margin-top: var(--s-1200);
    font-size: calc(var(--s-1300) * 1.6);
  }

  @include breakpoints.lg {
    margin-top: var(--s-1200);
    font-size: calc(var(--s-1300) * 2.5);
  }
}

#scroll-text {
  width: 40ch; // Set to minimum that ensures text doesn't wrap
  letter-spacing: -0.05em;

  /* animation properties */
  -moz-transform: translateX(100%);
  -webkit-transform: translateX(100%);
  transform: translateX(100%);

  /* Set speed */
  -moz-animation: my-animation 28s linear infinite;
  -webkit-animation: my-animation 28s linear infinite;
  animation: my-animation 28s linear infinite;
}

@keyframes my-animation {
  from {
    -moz-transform: translateX(1%);
    -webkit-transform: translateX(1%);
    transform: translateX(1%);
  }
  to {
    /* Fiddling with this will rerun the animation before the current loop exits screen. */
    -moz-transform: translateX(-65%);
    -webkit-transform: translateX(-65%);
    transform: translateX(-65%);
  }
}

// Reposition intro content to top of screen on medium sized screens
@include breakpoints.md {
  .intro {
    position: relative;
    top: 0;
    margin: var(--s-200) 0;
    &__content {
      margin: 0;
      width: fit-content;
      margin-top: -1.75em;
      margin-inline-start: 25%;
      @media screen and (min-width: 1300px) {
        flex-direction: row;
      }
    }
  }
}

.focus-areas {
  &__list {
    counter-reset: my-awesome-counter;
    list-style: none;
    &__item {
      width: 100%;
      counter-increment: my-awesome-counter;
      > h3 {
        display: inline;
        font-size: var(--s-800);
        @include breakpoints.lg {
          font-size: var(--s-1000);
        }
      }
      &::before {
        content: "0" counter(my-awesome-counter);
        font-size: var(--s-600);
        margin-right: 10%;
        line-height: 1;
        margin-bottom: 1rem;
      }
      &__content {
        display: grid;
        gap: var(--s-500);
        @include breakpoints.md {
          grid-auto-flow: column;
          grid-template-columns: repeat(12, minmax(16px, 1fr));
        }
        &__image {
          background-color: lightgray;
          aspect-ratio: 16 / 9;
          @include breakpoints.md {
            grid-column: 1 / 8;
          }
        }
        &__text {
          @include breakpoints.md {
            grid-column: 8 / 13;
          }
        }
      }
    }
  }
}

/// OLD STUFF
.hero {
  position: relative;
  padding-top: var(--s-800);
  min-height: calc(90vh - 3em);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  article {
    // padding: var(--s-500) 4%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--s-400);
    text-align: center;
  }

  h1 {
    margin: 0;
  }

  img {
    margin-bottom: 3rem; //same as height of coloured-base
    max-height: 4em;
  }
}

img {
  --flow-space: var(--s-900);
}

.muted-card {
  background-color: var(--color-z0);
  padding: var(--s-700);
  border-radius: 1rem;
  font-size: var(--s-300);
  font-size: 0.9em;
  // max-width: 28rem;
  align-self: center;
  ul {
    padding-left: 1em;
  }
}

.core-competences {
  --flow-space: var(--s-1200);
  padding: 0;
  & > li {
    grid-column-gap: 10rem;
    --flow-space: var(--s-1200);
    list-style: none;
    ul {
      font-size: 0.9em;
      li {
        color: var(--color-text-secondary);
        list-style: disc;
      }
    }
  }
  &__heading {
    @include breakpoints.md {
      grid-column-start: 2;
    }
  }
  &__description {
    @include breakpoints.md {
      grid-row: span 2;
    }
  }
  &__image {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: end;
    padding-bottom: 3rem;
    grid-row-start: 3;
    @include breakpoints.md {
      grid-row: 1 / 4;
    }
    img {
      max-height: 8em;
      @include breakpoints.md {
        max-height: 12em;
      }
    }
  }
}

.workprocess__steps {
  list-style: decimal !important;
  padding-left: 1em;
  & > li {
    padding: var(--s-500) 0;
    border-bottom: 1px solid var(--color-border-primary);
  }
}

@include breakpoints.md {
  #intro .grid {
    grid-column-gap: var(--s-1200);
    grid-row-gap: var(--s-900);
    .intro__heading {
      grid-column: span 2;
    }
    .intro__text {
      grid-row-start: 2;
    }
  }
}
